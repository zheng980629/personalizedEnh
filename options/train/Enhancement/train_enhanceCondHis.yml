name: EnhancementCond
model_type: EnhanceConditionHisModel
scale: 1
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 10
use_gan: false
gan_type: gan
noiseMap_block: 16


datasets:
  train:
    name: LOL
    type: LQGT_ref_dataset
    data_type: img
    dataroot_GT:  
    dataroot_ref: 
    dataroot_LQ: 

    use_shuffle: true
    num_worker_per_gpu: 1
    batch_size_per_gpu: 1
    color: RGB
    resize_to_500: true

  val:
    name: LOL
    type: LQGT_ref_n_dataset
    data_type: img
    dataroot_GT: 
    dataroot_ref: 
    dataroot_LQ: 
    n_refs: 1 # number of reference images
    ref_cri: random  # mse_GT  color_condition  niqe  random
    resize_ref_to_500: false
    color: RGB

# network structures
network_decom:
  type: decomp_KinD
  num_in_ch: 3
  num_feat: 32
  rgb_mean: [0.4488, 0.4371, 0.4040]

network_denoise:
  type: Noise2NoiseSubtraction
  num_in_ch: 4
  output_channels: 16
  conditional_dim: 8
  finetune: False

network_g:
  type: EnhancementCondition_hsvHistogram
  illu_num_in_ch: 1
  illu_num_feat: 16
  illu_histogram_bins: 254
  illu_histogram_dim: 64
  illu_num_out_ch: 1
  condition_num_in_ch: 3
  condition_hidden_ch: 16
  negative_slope: 0.2
  reflection_num_in_ch: 3
  reflection_num_base: 6
  reflection_num_out_ch: 3
  tanh: true
  rgb_mean: [0.4488, 0.4371, 0.4040]

# path
path:
  pretrain_network_decom: path to the pre-trained decomposition network
  strict_load_decom: true
  pretrain_network_denoise: path to the pre-trained denoise_0 network
  strict_load_denoise: true
  pretrain_network_g: ~
  strict_load_g: true

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4 # 3e-5
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 3e-5
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [10000, 30000, 50000, 80000, 100000, 150000, 200000, 250000]
    gamma: 0.5

  total_iter: 300000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: !!float 0e0
  histogram_opt:
    type: L_histogram
    loss_weight: !!float 5e1
  colorMapHis_opt:
    type: L_histogram
    loss_weight: !!float 0e-9 #1e-9
  hsvReflHis_opt:
    type: L_hsvHistogram
    loss_weight: !!float 1e-2 #1e-2
  meanReflHis_opt:
    type: L_histogram
    loss_weight: !!float 0e-9 # 1e-7
  colorMapGram_opt:
    type: GramL1Loss
    loss_weight: !!float 0e-1 # 5e-1
  reflGram_opt:
    type: GramL1Loss
    loss_weight: !!float 1e-4 # 1e-4
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # 'conv1_1': 0.2  # before relu
      # 'conv2_1': 0.2  # before relu
      # 'conv3_1': 0.2  # before relu
      # 'conv4_1': 0.2  # before relu
      'conv5_4': 1.0  # before relu
    vgg_type: vgg19
    use_input_norm: true
    range_norm: false
    perceptual_weight: 0.001
    style_weight: 0
    criterion: l1
  perceptualLuminance_opt:
    type: PerceptualLoss
    layer_weights:
      'conv5_4': 1.0  # before relu
    vgg_type: vgg19
    use_input_norm: true
    range_norm: false
    perceptual_weight: 0 # 0.001
    style_weight: 0
    criterion: l1
  refReflIdentity_opt:
    type: L1Loss
    loss_weight: !!float 0e-4 # 1e-4
  spatial_opt:
    type: L_spa
    loss_weight: !!float 3e-2   # 3e-2
    spa_kernel: 5
  spatialRefl_opt:
    type: L_spaRefl
    loss_weight: !!float 0e-3   # 1e-3
    spa_kernel: 5
  color_opt:
    type: L_color
    loss_weight: !!float 2e-3
  colorRefl_opt:
    type: L_color
    loss_weight: !!float 0e-4 # 2e-4
  Lab_opt:
    type: LabLoss
    loss_weight: !!float 0
  gan_opt:
    type: vanillaGANLoss
    gan_type: gan
    loss_weight: !!float 3.5e-2 #3.5e-2
  G_update_ratio: 1
  G_init_iters: !!float 0e3
  D_update_ratio: 1
  D_init_iters: !!float 0e3


# validation settings
val:
  val_freq: !!float 10000
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 1
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
